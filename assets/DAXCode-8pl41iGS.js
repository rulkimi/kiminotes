import{P as r}from"./PageLayout-gnKP0t_A.js";/* empty css                                                                                   */import{_ as n}from"./PreviewBlock-DF2hZQdL.js";import{r as o,y as d,c as p,w as a,o as m,a as t,d as e,b as l,u as c}from"./index-D3ypXnRU.js";import{g as f}from"./index-DQwBvNK9.js";const h={class:"flex flex-col gap-4"},_=e("p",null,[t("DAX provides powerful functions for analyzing and manipulating data within tables. Hereâ€™s an overview of the "),e("span",{class:"font-mono"},"PATH"),t(" and "),e("span",{class:"font-mono"},"EARLIER"),t(" functions:")],-1),E=e("h3",{class:"text-lg font-bold sublink"},[t("Using the "),e("span",{class:"font-mono"},"PATH"),t(" Function")],-1),g=e("p",null,[t("The "),e("span",{class:"font-mono"},"PATH"),t(" function generates a delimited text string with the identifiers of all the parents of the current identifier. It starts with the oldest parent and continues up to the current identifier.")],-1),b=e("p",null,"Returns the current value of the specified column in an outer evaluation pass of the mentioned column.",-1),R=e("h3",{class:"text-lg font-bold sublink"},[t("Using the "),e("span",{class:"font-mono"},"EARLIER"),t(" Function")],-1),v=e("p",null,[t("The "),e("span",{class:"font-mono"},"EARLIER"),t(" function allows you to retrieve the value of a column from an outer evaluation pass. This is especially useful for nested calculations where you need to use a certain value as input and perform calculations based on that input.")],-1),y=e("p",null,"The next evaluation level out is represented by 1; two levels out is represented by 2 and so on. When omitted, the default value is 1.",-1),T=e("p",null,"Steps:",-1),A=e("ol",{class:"ml-3"},[e("li",{class:"list-decimal"},[e("span",{class:"font-mono"},"EARLIER"),t(" gets the value of "),e("span",{class:"font-mono"},"TotalSubcategorySales"),t(" for the current row.")]),e("li",{class:"list-decimal"},[e("span",{class:"font-mono"},"FILTER"),t(" returns rows where "),e("span",{class:"font-mono"},"TotalSubcategorySales"),t(" is larger than the current "),e("span",{class:"font-mono"},"EARLIER"),t(" value.")]),e("li",{class:"list-decimal"},[e("span",{class:"font-mono"},"COUNTROWS"),t(" counts the rows and assigns that value plus 1 to the new calculated column.")]),e("li",{class:"list-decimal"},"This process repeats until the end of the table.")],-1),H={__name:"DAXCode",setup(w){const s=o([]);d(()=>{s.value=f()});const i=o(`PATH(<ID_columnName>, <parent_columnName>)

// Example usage:
= PATH(Employee[EmployeeKey], Employee[ParentEmployeeKey])
`),u=o(`EARLIER(<column>, <number>)

// Example usage:
= COUNTROWS(FILTER(ProductSubcategory, EARLIER(ProductSubcategory[TotalSubcategorySales]) < ProductSubcategory[TotalSubcategorySales])) + 1
`);return(S,I)=>(m(),p(r,{sublinks:s.value},{subtitle:a(()=>[t(" Understanding DAX Functions: PATH and EARLIER ")]),content:a(()=>[e("div",h,[_,E,g,l(c(n),{"script-code":i.value,"file-name":"PATH Function"},null,8,["script-code"]),b,R,v,l(c(n),{"script-code":u.value,"file-name":"EARLIER Function"},null,8,["script-code"]),y,T,A])]),_:1},8,["sublinks"]))}};export{H as default};
